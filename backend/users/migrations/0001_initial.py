# Generated by Django 4.2.6 on 2023-11-05 08:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='RoleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('role_code', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='RoomDepartmentRoleUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canViewDashboard', models.BooleanField(default=False)),
                ('canCreateTask', models.BooleanField(default=False)),
                ('role_id', models.ForeignKey(db_column='role_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_id', to='users.rolemodel', verbose_name='Id của table Roles')),
                ('roomDepartment_id', models.ForeignKey(db_column='roomDepartment_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roomDepartment_id', to='departments.roomdepartmentmodel', verbose_name='Id của table RoomDepartments')),
                ('user_id', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL, verbose_name='Id của table Users')),
            ],
            options={
                'db_table': 'RoomDepartmentRoleUser',
            },
        ),
        migrations.AddConstraint(
            model_name='rolemodel',
            constraint=models.UniqueConstraint(fields=('role_name',), name='unique_role_name'),
        ),
        migrations.AddConstraint(
            model_name='rolemodel',
            constraint=models.UniqueConstraint(fields=('role_code',), name='unique_role_code'),
        ),
        migrations.AddField(
            model_name='useraccount',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='useraccount',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='roomdepartmentroleusermodel',
            index=models.Index(fields=['roomDepartment_id', 'role_id', 'canViewDashboard', 'canCreateTask'], name='RoomDepartm_roomDep_d1ad0c_idx'),
        ),
    ]
